// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: kYz2v7iEZ8D57jf9vnLxce
// Component: CYWcjzHUXW_q
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import { useScreenVariants } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: aoNG0OPj-BeO/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_blank_project.module.css"; // plasmic-import: kYz2v7iEZ8D57jf9vnLxce/projectcss
import * as sty from "./PlasmicHomepage.module.css"; // plasmic-import: CYWcjzHUXW_q/css
import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: 7R-Y0_Ur0GHe/icon
import Icon6Icon from "./icons/PlasmicIcon__Icon6"; // plasmic-import: C0gW3zOs31f_/icon
import Icon5Icon from "./icons/PlasmicIcon__Icon5"; // plasmic-import: Q7-TI3Tuh01X/icon

export const PlasmicHomepage__VariantProps = new Array();

export const PlasmicHomepage__ArgProps = new Array();

function PlasmicHomepage__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants()
  });

  return (
    <React.Fragment>
      <div className={defaultcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            defaultcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <div className={classNames(defaultcss.all, sty.box___2Bmfo)}>
            <div className={classNames(defaultcss.all, sty.box__yjUsL)}>
              <div className={classNames(defaultcss.all, sty.box__f9XlI)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.box__eEaQg)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.box__lAvH5)}
                  >
                    <img
                      alt={""}
                      className={classNames(defaultcss.img, sty.img___5SFqI)}
                      role={"img"}
                    />

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(defaultcss.all, sty.box__iSaRx)}
                    >
                      <p.Stack
                        as={"a"}
                        hasGap={true}
                        className={classNames(defaultcss.all, sty.link__yCywx)}
                      >
                        {false ? (
                          <IconIcon
                            className={classNames(
                              defaultcss.all,
                              sty.svg__e533
                            )}
                            role={"img"}
                          />
                        ) : null}

                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.box__fVhHb
                          )}
                        >
                          {"Services"}
                        </div>

                        {false ? (
                          <IconIcon
                            className={classNames(
                              defaultcss.all,
                              sty.svg___8Hd6
                            )}
                            role={"img"}
                          />
                        ) : null}
                      </p.Stack>

                      <p.Stack
                        as={"a"}
                        hasGap={true}
                        className={classNames(defaultcss.all, sty.link___9Hgra)}
                      >
                        {false ? (
                          <IconIcon
                            className={classNames(
                              defaultcss.all,
                              sty.svg__yRlhy
                            )}
                            role={"img"}
                          />
                        ) : null}

                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.box__kSvt
                          )}
                        >
                          {"Features"}
                        </div>

                        {false ? (
                          <IconIcon
                            className={classNames(
                              defaultcss.all,
                              sty.svg__sN03
                            )}
                            role={"img"}
                          />
                        ) : null}
                      </p.Stack>

                      <p.Stack
                        as={"a"}
                        hasGap={true}
                        className={classNames(defaultcss.all, sty.link__cn1Vi)}
                      >
                        {false ? (
                          <IconIcon
                            className={classNames(
                              defaultcss.all,
                              sty.svg___3K5IB
                            )}
                            role={"img"}
                          />
                        ) : null}

                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.box__qqu4D
                          )}
                        >
                          {"Company"}
                        </div>

                        {false ? (
                          <IconIcon
                            className={classNames(
                              defaultcss.all,
                              sty.svg__wZgsz
                            )}
                            role={"img"}
                          />
                        ) : null}
                      </p.Stack>

                      <p.Stack
                        as={"a"}
                        hasGap={true}
                        className={classNames(defaultcss.all, sty.link__dGjf3)}
                      >
                        {false ? (
                          <IconIcon
                            className={classNames(
                              defaultcss.all,
                              sty.svg__m6FwI
                            )}
                            role={"img"}
                          />
                        ) : null}

                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.box__ifa72
                          )}
                        >
                          {"Contact"}
                        </div>

                        {false ? (
                          <IconIcon
                            className={classNames(
                              defaultcss.all,
                              sty.svg___9Kkcv
                            )}
                            role={"img"}
                          />
                        ) : null}
                      </p.Stack>

                      <p.Stack
                        as={"a"}
                        hasGap={true}
                        className={classNames(defaultcss.all, sty.link__dfJ3X)}
                      >
                        {false ? (
                          <IconIcon
                            className={classNames(
                              defaultcss.all,
                              sty.svg__ddNGn
                            )}
                            role={"img"}
                          />
                        ) : null}

                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.box___3C6U
                          )}
                        >
                          {"Log in"}
                        </div>

                        {false ? (
                          <IconIcon
                            className={classNames(
                              defaultcss.all,
                              sty.svg__nwluI
                            )}
                            role={"img"}
                          />
                        ) : null}
                      </p.Stack>

                      <p.Stack
                        as={"a"}
                        hasGap={true}
                        className={classNames(defaultcss.all, sty.link__wZq4Q)}
                      >
                        {false ? (
                          <IconIcon
                            className={classNames(
                              defaultcss.all,
                              sty.svg__enISe
                            )}
                            role={"img"}
                          />
                        ) : null}

                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.box___1SNhn
                          )}
                        >
                          {"Sign up"}
                        </div>

                        {false ? (
                          <IconIcon
                            className={classNames(
                              defaultcss.all,
                              sty.svg__xz5D
                            )}
                            role={"img"}
                          />
                        ) : null}
                      </p.Stack>
                    </p.Stack>

                    {false ? (
                      <div
                        className={classNames(defaultcss.all, sty.box__p8GcO)}
                      >
                        <button
                          data-plasmic-name={"button"}
                          data-plasmic-override={overrides.button}
                          className={classNames(
                            defaultcss.button,
                            defaultcss.__wab_text,
                            sty.button
                          )}
                        >
                          {"Sign up"}
                        </button>

                        <p.Stack
                          as={"a"}
                          hasGap={true}
                          className={classNames(defaultcss.all, sty.link__zmcr)}
                        >
                          {false ? (
                            <IconIcon
                              className={classNames(
                                defaultcss.all,
                                sty.svg__vXHrd
                              )}
                              role={"img"}
                            />
                          ) : null}

                          <div
                            className={classNames(
                              defaultcss.all,
                              defaultcss.__wab_text,
                              sty.box__n7Ygz
                            )}
                          >
                            {"Log in"}
                          </div>

                          {false ? (
                            <IconIcon
                              className={classNames(
                                defaultcss.all,
                                sty.svg__eupLk
                              )}
                              role={"img"}
                            />
                          ) : null}
                        </p.Stack>
                      </div>
                    ) : null}
                  </p.Stack>
                </p.Stack>
              </div>

              <div
                data-plasmic-name={"hero3"}
                data-plasmic-override={overrides.hero3}
                className={classNames(defaultcss.all, sty.hero3)}
              >
                <img
                  alt={""}
                  className={classNames(defaultcss.img, sty.img__adQUs)}
                  role={"img"}
                  src={
                    "https://images.unsplash.com/photo-1558591710-4b4a1ae0f04d?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1834&q=80"
                  }
                />

                <div
                  data-plasmic-name={"background3"}
                  data-plasmic-override={overrides.background3}
                  className={classNames(defaultcss.all, sty.background3)}
                />

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"foreground"}
                  data-plasmic-override={overrides.foreground}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.foreground)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.box__gRuLf)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(defaultcss.all, sty.box__btOOn)}
                    >
                      <div
                        className={classNames(defaultcss.all, sty.box___9NeRs)}
                      >
                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.box__vuw1U
                          )}
                        >
                          {"Updated!"}
                        </div>
                      </div>

                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.box__ylOmb
                        )}
                      >
                        <span>
                          <React.Fragment>{"Designs that "}</React.Fragment>
                          <span style={{ textDecoration: "underline" }}>
                            {"adapt"}
                          </span>
                        </span>
                      </div>

                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.box__msiIt
                        )}
                      >
                        {
                          "Orci dui condimentum rutrum laoreet hac purus porta sem sem a vivamus a posuere vel molestie."
                        }
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(defaultcss.all, sty.box__f6Aed)}
                    >
                      <p.Stack
                        as={"a"}
                        hasGap={true}
                        className={classNames(defaultcss.all, sty.link__vGp8A)}
                      >
                        {false ? (
                          <IconIcon
                            className={classNames(
                              defaultcss.all,
                              sty.svg__gqesX
                            )}
                            role={"img"}
                          />
                        ) : null}

                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.box__jNoi2
                          )}
                        >
                          {"Start now ->"}
                        </div>

                        {false ? (
                          <IconIcon
                            className={classNames(
                              defaultcss.all,
                              sty.svg___5Pr00
                            )}
                            role={"img"}
                          />
                        ) : null}
                      </p.Stack>

                      <p.Stack
                        as={"a"}
                        hasGap={true}
                        className={classNames(defaultcss.all, sty.link___1XjQc)}
                      >
                        {false ? (
                          <IconIcon
                            className={classNames(
                              defaultcss.all,
                              sty.svg__sBqPq
                            )}
                            role={"img"}
                          />
                        ) : null}

                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.box__kyD4X
                          )}
                        >
                          {"Learn more…"}
                        </div>

                        {false ? (
                          <IconIcon
                            className={classNames(
                              defaultcss.all,
                              sty.svg__akDg8
                            )}
                            role={"img"}
                          />
                        ) : null}
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.box__bwHb)}
                  >
                    <div
                      className={classNames(defaultcss.all, sty.box___5J8Yt)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(defaultcss.all, sty.box__hr8Hr)}
                      >
                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.box__tlhE5
                          )}
                        >
                          {"Sign up with"}
                        </div>

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(defaultcss.all, sty.box__yvcow)}
                        >
                          <p.Stack
                            as={"a"}
                            hasGap={true}
                            className={classNames(
                              defaultcss.all,
                              sty.link___50SYg
                            )}
                          >
                            {true ? (
                              <IconIcon
                                className={classNames(
                                  defaultcss.all,
                                  sty.svg__xTpp7
                                )}
                                role={"img"}
                              />
                            ) : null}

                            <div
                              className={classNames(
                                defaultcss.all,
                                defaultcss.__wab_text,
                                sty.box__zshea
                              )}
                            >
                              {"Apple"}
                            </div>

                            {false ? (
                              <IconIcon
                                className={classNames(
                                  defaultcss.all,
                                  sty.svg___4JMmo
                                )}
                                role={"img"}
                              />
                            ) : null}
                          </p.Stack>

                          <p.Stack
                            as={"a"}
                            hasGap={true}
                            className={classNames(
                              defaultcss.all,
                              sty.link__sm337
                            )}
                          >
                            {true ? (
                              <Icon6Icon
                                className={classNames(
                                  defaultcss.all,
                                  sty.svg__hte6D
                                )}
                                role={"img"}
                              />
                            ) : null}

                            <div
                              className={classNames(
                                defaultcss.all,
                                defaultcss.__wab_text,
                                sty.box__qJs6G
                              )}
                            >
                              {"Google"}
                            </div>

                            {false ? (
                              <IconIcon
                                className={classNames(
                                  defaultcss.all,
                                  sty.svg__ypK81
                                )}
                                role={"img"}
                              />
                            ) : null}
                          </p.Stack>
                        </p.Stack>

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(defaultcss.all, sty.box__c7Ec2)}
                        >
                          <div
                            className={classNames(
                              defaultcss.all,
                              sty.box__ry0PM
                            )}
                          />

                          <div
                            className={classNames(
                              defaultcss.all,
                              defaultcss.__wab_text,
                              sty.box__pPyjn
                            )}
                          >
                            {"Or"}
                          </div>

                          <div
                            className={classNames(
                              defaultcss.all,
                              sty.box__tsOe
                            )}
                          />
                        </p.Stack>

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(defaultcss.all, sty.box__qMagP)}
                        >
                          <input
                            className={classNames(
                              defaultcss.input,
                              sty.textbox__tWgz6
                            )}
                            placeholder={"Some placeholder"}
                            size={1}
                            type={"text"}
                            value={"Some value"}
                          />

                          <input
                            className={classNames(
                              defaultcss.input,
                              sty.textbox___8Tmdx
                            )}
                            placeholder={"Some placeholder"}
                            size={1}
                            type={"text"}
                            value={"Some value"}
                          />

                          <input
                            className={classNames(
                              defaultcss.input,
                              sty.textbox__mEgj
                            )}
                            placeholder={"Some placeholder"}
                            size={1}
                            type={"text"}
                            value={"Some value"}
                          />
                        </p.Stack>

                        <p.Stack
                          as={"a"}
                          hasGap={true}
                          className={classNames(defaultcss.all, sty.link__cd7D)}
                        >
                          {false ? (
                            <IconIcon
                              className={classNames(
                                defaultcss.all,
                                sty.svg__zgpmT
                              )}
                              role={"img"}
                            />
                          ) : null}

                          <div
                            className={classNames(
                              defaultcss.all,
                              defaultcss.__wab_text,
                              sty.box___7WD6A
                            )}
                          >
                            {"Start your account"}
                          </div>

                          {false ? (
                            <Icon5Icon
                              className={classNames(
                                defaultcss.all,
                                sty.svg__sidy6
                              )}
                              role={"img"}
                            />
                          ) : null}
                        </p.Stack>
                      </p.Stack>

                      <div
                        className={classNames(defaultcss.all, sty.box___5SjkC)}
                      />

                      <div
                        className={classNames(defaultcss.all, sty.box__p296A)}
                      >
                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.box__opim2
                          )}
                        >
                          {
                            "A cras sagittis odio vestibulum pulvinar a eget hendrerit id vestibulum a leo sociosqu dictumst dictumst natoque magnis parturient."
                          }
                        </div>
                      </div>
                    </div>
                  </p.Stack>
                </p.Stack>
              </div>
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: ["root", "button", "hero3", "background3", "foreground"],
  button: ["button"],
  hero3: ["hero3", "background3", "foreground"],
  background3: ["background3"],
  foreground: ["foreground"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHomepage__ArgProps,
      internalVariantPropNames: PlasmicHomepage__VariantProps
    });

    const { dataFetches } = props;
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    button: makeNodeComponent("button"),
    hero3: makeNodeComponent("hero3"),
    background3: makeNodeComponent("background3"),
    foreground: makeNodeComponent("foreground"),
    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
